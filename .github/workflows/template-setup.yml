name: テンプレートリポジトリ設定

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    # このワークフローは、元のテンプレートリポジトリでは実行されません。
    # "Use this template" で作成された新しいリポジトリでのみ実行されます。
    if: github.repository != 'tkgshn/X2Scb'

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: テンプレート使用のためにリポジトリをセットアップ
        run: |
          echo "🚀 テンプレートからリポジトリをセットアップ中です..."

          # publicディレクトリ内の既存のツイートデータを削除
          echo "🧹 サンプルデータをクリーンアップ中..."
          find public -name "*.json" -delete
          find public -name "*.txt" -delete
          find public -name "*.html" -delete

          # .gitkeepファイルを作成してpublicディレクトリを保持 (空のディレクトリをGit管理するため)
          touch public/.gitkeep

          # リポジトリ名とユーザー名を環境変数から取得
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          USER_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)

          echo "📝 ユーザースクリプトの設定を更新中..."
          # UserScriptの設定を動的に更新 (GitHubユーザー名とリポジトリ名を置換)
          sed -i "s/YOUR_GITHUB_USERNAME/$USER_NAME/g" src/frontend/userscript/scrapbox-twitter-daily.user.js
          sed -i "s/YOUR_REPO_NAME/$REPO_NAME/g" src/frontend/userscript/scrapbox-twitter-daily.user.js

          # セットアップガイド (SETUP.md) を生成
          echo "📝 セットアップガイド (SETUP.md) を作成中..."
          cat > SETUP.md << 'EOF'
          # 🔧 初期セットアップが必要です

          ## 1. 環境変数

          ルートディレクトリに `.env` ファイルを作成し、以下の変数を設定してください：

          ```env
          TWITTER_USERNAME=あなたのTwitterユーザー名
          TWITTER_BEARER_TOKEN=あなたのTwitter Bearer Token
          ```

          ## 2. GitHub Pages 設定

          1. あなたのリポジトリの「Settings」に移動します。
          2. 「Pages」セクションに移動します。
          3. ソースとして「GitHub Actions」を選択し、GitHub Pagesを有効にします。

          ## 3. GitHub Actions シークレット

          リポジトリに以下のシークレットを追加してください：
          - `TW_BEARER`: あなたのTwitter API Bearer Token
          - `OPENAI_API_KEY`: あなたのOpenAI APIキー（ツイート要約用）
          - `SCRAPBOX_PROJECT`: あなたのScrapboxプロジェクト名
          - `TWITTER_USERNAME`: あなたのTwitterユーザー名

          ## 4. 設定の確認

          ユーザースクリプトは、あなたのGitHubユーザー名とリポジトリ名で自動的に設定されています。
          これは `src/frontend/userscript/scrapbox-twitter-daily.user.js` で確認できます。

          ## 4.1 ユーザースクリプトのインストール

          1. ブラウザに [Tampermonkey](https://www.tampermonkey.net/) がインストールされていることを確認してください。
          2. 以下のリンクをクリックして、あなたのリポジトリからユーザースクリプトをインストールします：
             [ユーザースクリプトをインストール](https://github.com/$USER_NAME/$REPO_NAME/raw/main/src/frontend/userscript/scrapbox-twitter-daily.user.js)
          3. Tampermonkeyがスクリプトを表示する新しいタブを開きます。「インストール」をクリックしてください。

          ## 5. 初回実行

          セットアップ後、日次ワークフローを手動でトリガーするか、スケジュールされた実行を待つことができます。

          ---

          **セットアップ完了後、このファイルは削除してください！**
          EOF

      - name: READMEをテンプレート用に更新
        run: |
          echo "📚 READMEを更新中..."
          cat > README.md << 'EOF'
          # 📱 X2Scb - Twitter連携Scrapbox日誌テンプレート

          > 🚀 **GitHubテンプレートリポジトリ** - 「Use this template」ボタンをクリックして、あなた専用のTwitter-Scrapbox連携システムを作成しましょう！

          ## 📖 概要

          X2Scbは、あなたの日々のツイートを自動的に収集し、Scrapboxのページへ簡単にインポートできる形式に整形するシステムです。

          ## ✨ 主な機能

          - 🔄 GitHub Actionsによる**ツイート自動収集**
          - 📋 Scrapbox互換の**整形機能**
          - 🌐 簡単なデータアクセスのための**GitHub Pagesデプロイ**
          - 🔧 スムーズなScrapbox連携のための**ブラウザユーザースクリプト**
          - 📊 JSONおよびTXT形式での**データ出力**

          ## 🚀 クイックスタート

          1. **初期セットアップを完了する**: [SETUP.md](SETUP.md) の指示に従ってください。
          2. **環境を設定する**: Twitter APIの認証情報を設定します。
          3. **GitHub Pagesを有効にする**: リポジトリ設定でPagesを設定します。
          4. **ユーザースクリプトをインストールする**: Scrapbox連携のためにブラウザスクリプトを追加します。

          ## 📁 ディレクトリ構造

          ```
          ├── .github/workflows/     # GitHub Actions ワークフロー
          ├── public/               # 生成されたツイートデータ (GitHub Pages用)
          ├── src/
          │   ├── backend/          # データ処理スクリプト
          │   └── frontend/         # Scrapbox用ユーザースクリプト
          ├── scripts/              # ユーティリティスクリプト
          └── daily.js              # メイン収集スクリプト
          ```

          ## 🛠️ 使い方

          ### 自動収集
          GitHub Actions ワークフローが毎日実行され、以下の処理を行います:
          1. 前日のツイートを取得
          2. Scrapbox用に整形
          3. GitHub Pagesに公開

          ### 手動インポート
          Scrapboxでユーザースクリプトを使用し、以下を実行します:
          - 日付ページに昨日のツイートを自動インポート
          - `?date=YYYY-MM-DD` パラメータで特定の日付を手動インポート

          ## 🔧 設定

          詳細な設定手順については [SETUP.md](SETUP.md) を参照してください。

          ## 📄 ライセンス

          MITライセンス - 自由に使用、変更してください！

          ## 🤝 コントリビューション

          Issueやプルリクエストを歓迎します！
          EOF

      - name: 変更をコミット
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "🎉 テンプレートからリポジトリを初期化

          - publicディレクトリからサンプルデータをクリーンアップ
          - セットアップ手順 (SETUP.md) を追加
          - テンプレート使用のためにREADMEを更新
          - ユーザースクリプト設定を自動更新
          - 初期設定の準備完了" || exit 0

      - name: 変更をプッシュ
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: テンプレート設定ワークフローを削除
        run: |
          echo "🗑️ テンプレート設定ワークフローを削除中..."
          git rm .github/workflows/template-setup.yml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "🧹 初期化後にテンプレート設定ワークフローを削除"

      - name: クリーンアップをプッシュ
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: セットアップ完了
        run: |
          echo "✅ テンプレートのセットアップが完了しました！"
          echo "📋 次のステップ:"
          echo "1. 設定手順については SETUP.md ファイルを確認してください。"
          echo "2. 環境変数を設定してください。"
          echo "3. GitHub Pagesを設定してください。"
          echo "4. Twitter APIの認証情報をリポジトリのシークレットに追加してください。"
